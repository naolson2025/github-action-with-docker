name: Deployment (Container)
on:
  push:
    branches:
      - main
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: test
    runs-on: ubuntu-latest
    # To add a docker container to the job, use the container keyword.
    # we need to use images that are available on docker hub
    # all following steps will be executed inside the container
    # example of shorthand syntax
    container: node:16
    # example of full syntax
    # container:
    #   image: node:16
      # env variables inside the image
      # env:
      #   MONGODB_CONNECTION_PROTOCOL: mongodb+srv
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      # mongodb cluster address matches the name of the service below
      # because our job is running inside a container, we can use the service name as the address. Github actions automatically networks the container with the service
      # if we were running the job on a self-hosted runner, we would need to use the ip address of the service: 127.0.0.1:27017 (default mongodb port)
      MONGODB_CLUSTER_ADDRESS: mongodb
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      PORT: 8080
    # service containers like a test database
    # services go under a specific job
    services:
      # name of the service
      mongodb:
        # image to use
        image: mongo
        # only need to expose ports if the job is not running inside a container
        # ports:
        #   - 27017:27017
        # env variables inside the image
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
